---
name: System tests

on:
  workflow_call:
    inputs:
      lydbanken_stub_imagetag:
        description: The tag for he lydbanken stub image. Defaults to "systemtest", which is tagged by Lydbanken master build upon success.
        default: systemtest
        required: false
        type: string
      radioarkiv_web_imagetag:
        description: The tag for the radioarkiv frontend image. Defaults to "systemtest", which is tagged by radioarkiv-ui master build upon success.
        default: systemtest
        required: false
        type: string
      registry:
        description: The OCI registry to upload container images to
        default: plattform.azurecr.io
        required: false
        type: string
      java_release:
        description: Java release for systemtests
        default: "8"
        required: false
        type: string
    secrets:
      mdb_github_token:
        description: The github token used for checking out the systemtest repo
        required: true
      registry_username:
        description: The OCI registry username for pulling images
        required: true
      registry_password:
        description: The OCI registry password for pulling images
        required: true

jobs:

  execute:

    runs-on:
      - lydteamet
      # This tag only exists on one runner, this preventing multiple paralell runs:
      - systemtest

    timeout-minutes: 30

    steps:

      - uses: actions/setup-java@v1
        with:
          java-version: ${{ inputs.java_release }}

      - name: Clone systemtest repo
        uses: actions/checkout@v2
        with:
          ref: master
          repository: nrkno/radioarkiv-systemtest
          token: ${{ secrets.mdb_github_token }}

      - name: Check for image existence in azurecr
        timeout-minutes: 3
        shell: bash
        run: |
          CREDS="$(echo "${{ secrets.registry_username }}:${{ secrets.registry_password }}" | base64 -w 0)"
          CHECKURL_LB="https://plattform.azurecr.io/v2/radioarkiv/radioarkiv-stub-standalone/manifests/${{ inputs.lydbanken_stub_imagetag }}"
          CHECKURL_FE="https://plattform.azurecr.io/v2/radioarkiv/radioarkiv-web/manifests/${{ inputs.radioarkiv_web_imagetag }}"
          while true; do
            curl --fail --header "Authorization: Basic $CREDS" $CHECKURL_LB && curl --fail --header "Authorization: Basic $CREDS" $CHECKURL_FE && exit 0
            sleep 5s
          done

      - name: Prepare systemtest
        shell: bash
        run: |
          az acr login -u ${{ secrets.registry_username }} -p ${{ secrets.registry_password }} --name plattform
          ./build-docker-compose.sh
          docker-compose pull || (sleep 30s; docker-compose pull)
          docker-compose --project-name lydbanken up --force-recreate -d
        env:
          STUB_DOCKER_ID: ${{ inputs.lydbanken_stub_imagetag }}
          FRONTEND_DOCKER_ID: ${{ inputs.radioarkiv_web_imagetag }}

      - name: Wait until API up
        shell: bash
        timeout-minutes: 2
        run: |
          while true; do
            curl --fail "http://$(hostname):19000/api" && exit 0
            sleep 10s
          done

      - name: Run systemtest
        shell: bash
        run: |
          sleep 30s
          ./gradlew \
          -DFRONTEND_DOCKER_ID=$FRONTEND_DOCKER_ID \
          -DFRONTEND_SERVER=http://$(hostname):$FRONTEND_PORT \
          -DtestMode=headless \
          -PmyGetAccessToken=${{ secrets.PLATTFORM_MYGET_WRITE_SECRET }} \
          clean build
        env:
          STUB_DOCKER_ID: ${{ inputs.lydbanken_stub_imagetag }}
          FRONTEND_DOCKER_ID: ${{ inputs.radioarkiv_web_imagetag }}
          FRONTEND_PORT: 19000

      - name: Publish unit test results
        uses: mikepenz/action-junit-report@v2.7.0
        if: always()
        with:
          commit: ${{ github.sha }}
          check_name: Systemtest results
          report_paths: "**/build/test-results/**/*.xml"
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Teardown
        if: always()
        shell: bash
        run: |
          docker-compose --project-name lydbanken stop
          docker-compose --project-name lydbanken rm -f
